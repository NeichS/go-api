---
interface Props {
	title: string;
}

const { title } = Astro.props;

const data = await fetch('http://localhost:3000/users').then((response) =>
  response.json()
);

---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div>
		  {data.map((user) => (
			<div key={user.ID}>
			  <p>ID: {user.ID}</p>
			  <p>First Name: {user.FirstName}</p>
			  <p>Last Name: {user.LastName}</p>
			  <p>Email: {user.Email}</p>
			  <p>Created At: {user.CreatedAt}</p>
			  <p>Updated At: {user.UpdatedAt}</p>
			  <p>Tasks: {user.Tasks}</p>
			  {/* Agrega m√°s campos si es necesario */}
			</div>
		  ))}
		</div>
	  </body>
</html>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
		background: #13151a;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
</style>
